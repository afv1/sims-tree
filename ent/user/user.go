// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLogin holds the string denoting the login field in the database.
	FieldLogin = "login"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldComment holds the string denoting the comment field in the database.
	FieldComment = "comment"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeFamilies holds the string denoting the families edge name in mutations.
	EdgeFamilies = "families"
	// Table holds the table name of the user in the database.
	Table = "users"
	// FamiliesTable is the table that holds the families relation/edge.
	FamiliesTable = "families"
	// FamiliesInverseTable is the table name for the Family entity.
	// It exists in this package in order to avoid circular dependency with the "family" package.
	FamiliesInverseTable = "families"
	// FamiliesColumn is the table column denoting the families relation/edge.
	FamiliesColumn = "user_families"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldLogin,
	FieldPassword,
	FieldComment,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
